---
name: Embedded Linux CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: control-node

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Prepare environment
        run: |
          mkdir -p $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          GIT_HASH="$(git rev-parse --short $GITHUB_SHA)"
          echo "Git hash: $GIT_HASH"
          echo "git_hash=$GIT_HASH" >> $GITHUB_ENV
          VERSION="$(git describe --tags --abbrev=0)"
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Compile
        run: |
          cd ./firmware 
          ./build-image.sh "${{ github.workspace }}/oe-core"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: verdin-firmware
          path: | 
            ${{ github.workspace }}/oe-core/build/deploy/images/**/Reference-Minimal-Image-verdin-imx8mp.wic.gz
            ${{ github.workspace }}/oe-core/build/deploy/images/**/imx-boot
          if-no-files-found: error
          compression-level: 0

  test:
    runs-on: agent-node
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: verdin-firmware
          path: ${{ github.workspace }}/build

      - name: Flash Image
        run: |
          cd ${{ github.workspace }}/build
          gzip -df ./Reference-Minimal-Image-verdin-imx8mp.wic.gz
          uuu --lsusb
          uuu -b emmc_all ./imx-boot ./Reference-Minimal-Image-verdin-imx8mp.wic

      - name: Test Image
        run: |
          cd ${{ github.workspace}}/tests
          ./setup_and_run_tbot.sh
